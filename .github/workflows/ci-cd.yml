# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD Pipeline

on:
  pull_request:
    branches: [ "develop", "main" ]  # Runs CI tests on pull request to 'develop' or 'main' branch
  push:
    branches: [ "main" ]     # Triggers CD on push to 'main' branch (after merging PR)

jobs:
  # CI Job for building and testing on pull request to develop
  build-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    env:
      # For running Tests
      DB_URL: "jdbc:h2:mem:testdb"
      DB_USERNAME: "sa"
      DB_PASSWORD: ""
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_EXPIRATION: "3600000"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven

    # Configure Maven settings to authenticate with GitHub Packages
    - name: Set up Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>github</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.GITHUB_TOKEN }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml

    - name: Build and run tests
      run: mvn clean verify

  # CD Job for deploying to GitHub Packages on push to main
  deploy:
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven

    # TOD: For auto configure version number
    - name: Configure Git user
      run: |
        git config --global user.email "actions@users.noreply.github.com"
        git config --global user.name "GitHub Action"

    # Configure Maven settings to authenticate with GitHub Packages
    - name: Set up Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>github</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.GITHUB_TOKEN }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml

    - name: Build the project
      run: mvn clean package -DskipTests

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Build Docker image
      run: |
        docker build -t willake/user-service:${{ github.sha }} .

    - name: Log in to Docker Hub
      env:
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u willake --password-stdin

    - name: Push Docker image
      run: docker push willake/user-service:${{ github.sha }}
